apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "envoy.fullname" . }}
  labels:
    app: {{ template "envoy.name" . }}
    chart: {{ template "envoy.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  envoy.yaml: |
    node:
      id: "id_02"
      cluster: "cluster_02"
    admin:
      access_log_path: /var/log/envoy_admin.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
    static_resources:
      listeners:
      - name: tcp-listener
        address:
          socket_address:
            address: 0.0.0.0
            port_value: {{ .Values.service.ports.http2.targetPort }}
        filter_chains:
          filters:
          - name: envoy.filters.network.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: tcp
              cluster: upstream
              access_log:
              - name: file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
      clusters:
      - name: spire_agent
        connect_timeout: 1s
        # typed_extension_protocol_options:
        #   envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        #     "@type": type.googleapis.com/envoy.extensions.upstreams.http.HttpProtocolOptions
        #     explicit_http_config:
        #       http2_protocol_options: {}
        load_assignment:
          cluster_name: spire_agent
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  pipe:
                    path: /run/spire/agent.sock
      - name: upstream
        connect_timeout: 1s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: upstream
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.upstreamHost }}
                    port_value: {{ .Values.upstreamPort }}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              tls_certificate_sds_secret_configs:
              - name: "{{ .Values.frontendSpiffeId }}"
                sds_config:
                  resource_api_version: V3
                  api_config_source:
                    api_type: GRPC
                    transport_api_version: V3
                    grpc_services:
                      envoy_grpc:
                        cluster_name: spire_agent
              combined_validation_context:
                default_validation_context:
                  match_subject_alt_names:
                    - exact: "{{ .Values.backendSpiffeId }}"
                    # Add more SPIFFE IDs here if necessary
                validation_context_sds_secret_config:
                  name: {{ .Values.trustDomain }}
                  sds_config:
                    resource_api_version: V3
                    api_config_source:
                      api_type: GRPC
                      transport_api_version: V3
                      grpc_services:
                        envoy_grpc:
                          cluster_name: spire_agent # Must be specified in "clusters"